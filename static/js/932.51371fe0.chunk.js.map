{"version":3,"file":"static/js/932.51371fe0.chunk.js","mappings":"6OAEaA,EAAOC,EAAAA,EAAAA,GAAH,2JAWJC,EAAOD,EAAAA,EAAAA,GAAH,mT,iDCbJE,EAAM,mCAAG,WAAMC,GAAN,kFACdC,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NANc,SAUGC,MAAM,sCAAD,OACYN,EADZ,kCAE1BC,GAZkB,WAUdM,EAVc,QAcNC,GAdM,sBAeZ,IAAIC,MAAM,qBAfE,uBAiBDF,EAASG,OAjBR,cAiBdC,EAjBc,yBAkBbA,GAlBa,4CAAH,sD,mBC8CnB,EAtCgB,WACd,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAEMd,GADSe,EAAAA,EAAAA,MACQf,SAEvBgB,EAAAA,EAAAA,YAAU,WAENjB,EAAOC,GAASiB,MAAK,SAAAN,GAAI,OAAIG,EAAWH,EAAKO,QAApB,GAG5B,GAAE,CAAClB,IAEJmB,QAAQC,IAAIP,GAEZ,IAAMQ,EAAcR,EAAQS,OAC1BT,EAAQU,KAAI,SAAAC,GACV,IAAMC,EAAQD,EAAGE,WAAWC,MAAM,EAAG,IAAIC,MAAM,KACzCC,EAAa,UAAMJ,EAAM,GAAZ,YAAkBA,EAAM,GAAxB,YAA8BA,EAAM,IACvD,OACE,UAAC3B,EAAD,YACE,iBAAKgC,MAAO,CAAEC,QAAS,OAAQC,eAAgB,iBAA/C,WACE,UAACC,EAAA,EAAD,YACE,SAAC,MAAD,CAAQH,MAAO,CAAEI,YAAa,MAC7BV,EAAGW,WAEN,uBAAIN,QAGN,uBAAIL,EAAGY,YATEZ,EAAGa,GAYjB,KAED,SAAC,UAAD,UAAO,mBAET,OAAO,SAACzC,EAAD,UAAOyB,GACf,C","sources":["components/Reviews/Reviews.styled.js","servises/fetchReviews.js","components/Reviews/Reviews.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  display: grid;\n  grid-column-start: 1;\n  grid-column-end: 3;\n\n  padding-top: 20px;\n  padding-bottom: 50px;\n\n  gap: 10px;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n\n  border: 1px solid #e13c52;\n  border-radius: 5px;\n  padding: 20px;\n\n  transition: background-color 250ms linear, transform 100ms linear;\n  &:hover {\n    background-color: #260d1a;\n    transform: scale(1.02);\n  }\n`;\n","export const getRew = async movieId => {\n  const options = {\n    method: 'GET',\n    headers: {\n      accept: 'application/json',\n      Authorization:\n        'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJkMDFlNTEwMDVkNmUzNmIzZmEyYjcwMGNmNTU3ZmIzNiIsInN1YiI6IjY0ZGY3MDJlNWFiODFhMDBlMjViNWM3OCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.rIEHGQtSCg2QAbSZiBv3N9YAouqZ8kZ5M1Eq0T6nfew',\n    },\n  };\n\n  const response = await fetch(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?language=en-US&page=1`,\n    options\n  );\n  if (!response.ok) {\n    throw new Error('Not found reviews');\n  }\n  const data = await response.json();\n  return data;\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Item, List } from './Reviews.styled';\nimport Text from 'ui/Text';\nimport { FiUser } from 'react-icons/fi';\nimport { getRew } from 'servises/fetchReviews';\nimport Error from 'components/Error/Error';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const params = useParams();\n  const movieId = params.movieId;\n\n  useEffect(() => {\n    const get = () => {\n      getRew(movieId).then(data => setReviews(data.results));\n    };\n    get();\n  }, [movieId]);\n\n  console.log(reviews);\n\n  const ListReviews = reviews.length ? (\n    reviews.map(el => {\n      const parts = el.created_at.slice(0, 10).split('-');\n      const formattedDate = `${parts[2]}.${parts[1]}.${parts[0]}`;\n      return (\n        <Item key={el.id}>\n          <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n            <Text>\n              <FiUser style={{ marginRight: 10 }} />\n              {el.author}\n            </Text>\n            <p>{formattedDate}</p>\n          </div>\n\n          <p>{el.content}</p>\n        </Item>\n      );\n    })\n  ) : (\n    <Error>No reviews yet</Error>\n  );\n  return <List>{ListReviews}</List>;\n};\n\nexport default Reviews;\n"],"names":["List","styled","Item","getRew","movieId","options","method","headers","accept","Authorization","fetch","response","ok","Error","json","data","useState","reviews","setReviews","useParams","useEffect","then","results","console","log","ListReviews","length","map","el","parts","created_at","slice","split","formattedDate","style","display","justifyContent","Text","marginRight","author","content","id"],"sourceRoot":""}