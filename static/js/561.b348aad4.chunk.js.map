{"version":3,"file":"static/js/561.b348aad4.chunk.js","mappings":"6NAEaA,EAAOC,EAAAA,EAAAA,GAAH,2TAeJC,EAAiBD,EAAAA,EAAAA,IAAH,0CAIdE,EAAOF,EAAAA,EAAAA,EAAH,4C,SCGjB,EAtBiB,SAAC,GAAc,IAAZG,EAAW,EAAXA,KACVC,EAAkDD,EAAlDC,KAAMC,EAA4CF,EAA5CE,GAAIC,EAAwCH,EAAxCG,UAAWC,EAA6BJ,EAA7BI,WAAYC,EAAiBL,EAAjBK,aAGzC,OACE,UAACT,EAAD,YACE,gBACEU,IACED,EAAY,0CAAsCA,GALxD,wFAOIE,IAAKN,EACLO,MAAO,CAAEC,MAAO,OAAQC,OAAQ,WAElC,UAACZ,EAAD,YACE,SAACC,EAAD,CAAMS,MAAO,CAAEG,SAAU,IAAzB,SAAgCV,KAChC,UAACF,EAAD,WAAM,aAAWI,MACjB,UAACJ,EAAD,WAAM,eAAaK,UAXZF,EAed,E,iDCtBKU,EAAS,mCAAG,WAAMV,GAAN,kFACVW,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,qBAJI,SAQOC,MAAM,sCAAD,OACYf,EADZ,oEAE1BW,GAVc,WAQVK,EARU,QAYFC,GAZE,sBAaR,IAAIC,MAAM,oBAbF,uBAeGF,EAASG,OAfZ,cAeVrB,EAfU,yBAgBTA,GAhBS,4CAAH,sDAkBf,IChBasB,EAAOzB,EAAAA,EAAAA,GAAH,8KC6BjB,EAzBe,WACb,OAA4B0B,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAEMC,GADSC,EAAAA,EAAAA,MACQD,SAEvBE,EAAAA,EAAAA,YAAU,WAENhB,EAAUc,GAASG,MAAK,SAAA7B,GAAI,OAAIyB,EAAUzB,EAAK8B,KAAnB,GAG/B,GAAE,CAACJ,IAEJ,IAAMK,EACJP,EAAOQ,OAAS,GACZR,EAAOS,KAAI,SAAAC,GAAE,OAAI,SAAC,EAAD,CAAUlC,KAAMkC,GAApB,IACbV,EAAOW,MAAM,EAAG,IAAIF,KAAI,SAAAC,GAAE,OAAI,SAAC,EAAD,CAAUlC,KAAMkC,GAApB,IAIhC,OAFAE,QAAQC,IAAIb,IAGV,+BACE,SAACF,EAAD,UAAOS,KAGZ,C","sources":["components/OneActor/OneActor.styled.js","components/OneActor/OneActor.jsx","servises/fetchActors.js","components/Actors/Actors.styled.js","components/Actors/Actors.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Item = styled.li`\n  display: grid;\n  grid-template-columns: 111px 200px;\n  grid-template-rows: 155px;\n\n  border: 1px solid #e13c52;\n\n  overflow: hidden;\n  transition: background-color 250ms linear, transform 100ms linear;\n  &:hover {\n    background-color: #260d1a;\n    transform: scale(1.02);\n  }\n`;\n\nexport const WrapperContent = styled.div`\n  padding: 20px;\n`;\n\nexport const Info = styled.p`\n  font-size: 16px;\n`;\n","import { Info, Item, WrapperContent } from './OneActor.styled';\n\nconst OneActor = ({ data }) => {\n  const { name, id, character, popularity, profile_path } = data;\n  const img =\n    'https://internetdevels.com/sites/default/files/public/blog_preview/404_page_cover.jpg';\n  return (\n    <Item key={id}>\n      <img\n        src={\n          profile_path ? `https://image.tmdb.org/t/p/w500/${profile_path}` : img\n        }\n        alt={name}\n        style={{ width: '100%', height: '100%' }}\n      />\n      <WrapperContent>\n        <Info style={{ fontSize: 24 }}>{name}</Info>\n        <Info>Character:{character}</Info>\n        <Info>Popularity: {popularity}</Info>\n      </WrapperContent>\n    </Item>\n  );\n};\n\nexport default OneActor;\n","const getActors = async id => {\n  const options = {\n    method: 'GET',\n    headers: {\n      accept: 'application/json',\n    },\n  };\n\n  const response = await fetch(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=d01e51005d6e36b3fa2b700cf557fb36&language=en-US`,\n    options\n  );\n  if (!response.ok) {\n    throw new Error('Actors not found');\n  }\n  const data = await response.json();\n  return data;\n};\nexport default getActors;\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  grid-column-start: 1;\n  grid-column-end: 3;\n\n  display: flex;\n  flex-wrap: wrap;\n  gap: 5px;\n\n  padding-top: 20px;\n  padding-bottom: 50px;\n`;\n","import OneActor from 'components/OneActor/OneActor';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport getActors from 'servises/fetchActors';\nimport { List } from './Actors.styled';\n\nconst Actors = () => {\n  const [actors, setActors] = useState([]);\n  const params = useParams();\n  const movieId = params.movieId;\n\n  useEffect(() => {\n    const get = () => {\n      getActors(movieId).then(data => setActors(data.cast));\n    };\n    get();\n  }, [movieId]);\n\n  const ActorsList =\n    actors.length < 20\n      ? actors.map(el => <OneActor data={el} />)\n      : actors.slice(0, 20).map(el => <OneActor data={el} />);\n\n  console.log(actors);\n\n  return (\n    <>\n      <List>{ActorsList}</List>\n    </>\n  );\n};\nexport default Actors;\n"],"names":["Item","styled","WrapperContent","Info","data","name","id","character","popularity","profile_path","src","alt","style","width","height","fontSize","getActors","options","method","headers","accept","fetch","response","ok","Error","json","List","useState","actors","setActors","movieId","useParams","useEffect","then","cast","ActorsList","length","map","el","slice","console","log"],"sourceRoot":""}